var gHashSuffixes = ["#", "#myRef", "#myRef?a=b", "#myRef#", "#myRef#x:yz"];

// TEST HELPER FUNCTIONS
// ---------------------
function do_info(text, stack) {
  if (!stack) {
    stack = Components.stack.caller;
  }

  dump(
    "\n" +
      "TEST-INFO | " +
      stack.filename +
      " | [" +
      stack.name +
      " : " +
      stack.lineNumber +
      "] " +
      text +
      "\n"
  );
}



// Test that a given URI parses correctly into its various components.
function do_test_uri_basic(aTest) {
  var URI;

  try {
    URI = gIoService.newURI(aTest.spec);
  } catch (e) {
    do_info("Caught error on parse of" + aTest.spec + " Error: "+e.name+" " + e.result);
    dump("\n{\"url\":\""+ aTest.spec+"\", \"exception\":\""+e.name+" "+e.result+"\"}");
    if (aTest.fail) {
      Assert.equal(e.result, aTest.result);
      return;
    }
    do_throw(e.result);
  }

}





// TEST MAIN FUNCTION
// ------------------
add_task(function mainTest(){

  gTests.forEach(function(aTest) {
    // Check basic URI functionality
    try {
      do_test_uri_basic(aTest);
    } catch (e) {
      do_info("caught "+e+" in main");
    }
    
  }
  );
});
